function requestUpdate(){updateRequested||(setTimeout(updateSubscribers,Math.max(0,1e3/60-(Date.now()-lastUpdate))),updateRequested=!0)}function updateSubscribers(){lastUpdate=Date.now(),updateRequested=!1;var accessMap=new immutable.Map;for(var path of dirtyState)accessMap=setIn(accessMap,path,!0);dirtyState.clear();for(var subscriber of subscribers.values()){var needsUpdate=!1;for(path of subscriber.accessed)if(accessMap.getIn(path)){needsUpdate=!0;break}needsUpdate&&updateSubscriber(subscriber)}}function updateSubscriber(subscriber){stateAccessed.clear(),subscriber.fn(),subscriber.accessed=Array.from(stateAccessed)}function setIn(o,path,value){if(path.length){var key=path[0];path.slice(1);return o||(o="number"==typeof key?new immutable.List:new immutable.Map),o.set(key,setIn(o.get(path[0]),path.slice(1),value))}return immutable.fromJS(value)}function toJS(o){return"object"==typeof o&&null!==o&&"function"==typeof o.toJS&&(o=o.toJS()),o}function toPath(arr){return Array.isArray(arr)||(arr=[arr]),arr}var da=require("direape"),fri=module.exports;da.testSuite("fri");var immutable=require("immutable"),state,dirtyState,stateAccessed,subscribers,eventSubscribers;fri.getJS=((path,defaultValue)=>{return path=toPath(path),stateAccessed.add(path),toJS(state.getIn(path,defaultValue))}),fri.setJS=((path,value)=>{path=toPath(path),dirtyState.add(path),state=setIn(state,path,value),requestUpdate()}),fri.rerun=((name,fn)=>{if(fn){stateAccessed.clear();var subscriber={fn:fn};updateSubscriber(subscriber),subscribers.set(name,subscriber)}else subscribers["delete"](name)}),da.handle("fri:get",fri.getJS),da.handle("fri:set",fri.setJS),da.handle("fri:subscribe",((pid,name,path)=>da.jsonify(fri.rerun(`fri:subscribe ${path} -> ${name}@${pid}`,(()=>da.emit(pid,name,path,fri.getJS(path))))))),da.handle("fri:unsubscribe",((pid,name,path)=>fri.rerun(`fri:subscribe ${path} -> ${name}@${pid}`))),state=new immutable.Map,dirtyState=new Set,stateAccessed=new Set,subscribers=new Map,eventSubscribers=new Map;var updateRequested=!1,lastUpdate=Date.now();require.main===module&&da.ready((()=>da.runTests("fri").then((()=>da.isNodeJs()&&process.exit(0)))["catch"]((()=>da.isNodeJs()&&process.exit(-1)))));
